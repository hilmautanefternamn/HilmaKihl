(function(e){function t(t){for(var a,r,d=t[0],o=t[1],c=t[2],l=0,h=[];l<d.length;l++)r=d[l],Object.prototype.hasOwnProperty.call(s,r)&&s[r]&&h.push(s[r][0]),s[r]=0;for(a in o)Object.prototype.hasOwnProperty.call(o,a)&&(e[a]=o[a]);p&&p(t);while(h.length)h.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],a=!0,d=1;d<n.length;d++){var o=n[d];0!==s[o]&&(a=!1)}a&&(i.splice(t--,1),e=r(r.s=n[0]))}return e}var a={},s={app:0},i=[];function r(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=a,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/HilmaKihl.github.io/";var d=window["webpackJsonp"]=window["webpackJsonp"]||[],o=d.push.bind(d);d.push=t,d=d.slice();for(var c=0;c<d.length;c++)t(d[c]);var p=o;i.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"034f":function(e,t,n){"use strict";var a=n("85ec"),s=n.n(a);s.a},"2c16":function(e,t,n){"use strict";var a=n("be2f"),s=n.n(a);s.a},"56d7":function(e,t,n){"use strict";n.r(t);n("e260"),n("e6cf"),n("cca6"),n("a79d");var a=n("2b0e"),s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"},on:{click:function(t){return e.closeProject(t)}}},[e._m(0),n("div",{attrs:{id:"projectsContainer"}},e._l(e.projects,(function(t){return n("div",{key:t.id,staticClass:"projects",style:{"background-image":"url("+t.image+")","background-repeat":"no-repeat","background-position":"center","background-size":"cover"},on:{click:function(t){return e.click(t)}}},[n("div",{attrs:{id:"banners"}},[n("h1",{attrs:{id:"projName"}},[e._v(" "+e._s(t.name)+" ")]),n("ul",{staticClass:"banners",attrs:{id:"logos"}},e._l(t.languages,(function(e,t){return n("li",{key:t,style:{height:"max(2.5vw, 30px)",width:"max(2.5vw, 30px)","background-image":"url("+e+")","background-repeat":"no-repeat","background-position":"center","background-size":"contain"}})})),0)]),n("Project",{style:{display:"none"},attrs:{projectName:t.name,course:t.course,courseLink:t.courseLink,images:t.more_images,description:t.description,repo:t.repo,report:t.report,languages:t.languages,id:"project"+t.id}})],1)})),0)])},i=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"menu"}},[n("h1",{staticClass:"menuItem"},[e._v(" about ")]),n("h1",{staticClass:"menuItem"},[e._v(" contact ")])])}],r=n("d4bf"),d=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"project"},[n("button",{on:{click:function(t){return e.close(t)}}}),n("h1",[e._v(" "+e._s(e.projectName)+" ")]),n("a",{attrs:{id:"courseLink",href:e.courseLink}},[n("h3",[e._v(e._s(e.course))])]),e.images?n("vueper-slides",{attrs:{touchable:!1,"fixed-height":"35vh"}},e._l(e.images,(function(e){return n("vueper-slide",{key:e,style:{"background-size":"contain","background-repeat":"no-repeat"},attrs:{image:e}})})),1):""===e.images?n("div",{attrs:{id:"special_images"}}):e._e(),n("h5",[e._v(e._s(e.description))]),n("div",{attrs:{id:"linkContainer"}},[e.repo?n("a",{attrs:{href:e.repo}},[n("p",[e._v(" source code ")])]):e._e(),e.report?n("a",{attrs:{href:e.report}},[n("p",[e._v(" report ")])]):e._e()]),n("ul",{attrs:{id:"logos"}},e._l(e.languages,(function(e,t){return n("li",{key:t,style:{height:"5vw",width:"5vw","background-image":"url("+e+")","background-repeat":"no-repeat","background-position":"center","background-size":"contain"}})})),0)],1)},o=[],c=n("b1b5"),p=(n("2ec8"),{name:"Project",components:{VueperSlides:c["VueperSlides"],VueperSlide:c["VueperSlide"]},props:{projectName:String,course:String,courseLink:String,images:Array,description:String,repo:String,report:String,languages:Object},data:function(){return{}},methods:{close:function(e){var t=e.currentTarget.parentElement.id,n=document.getElementById(t);n.style="display: none; z-index: -1"}}}),l=p,h=(n("2c16"),n("2877")),u=Object(h["a"])(l,d,o,!1,null,"182cb90a",null),m=u.exports,g={name:"App",components:{Project:m},data:function(){return{projects:r}},methods:{click:function(e){var t=e.currentTarget.children[1].id,n=document.getElementById(t),a=n.style.zIndex;n.style=-1!=a?"display: flex; z-index: 5":"display: none; z-index: 0"},closeProject:function(e){var t=e.path[0].id;if("projectsContainer"===t||"menu"===t)for(var n=document.querySelectorAll('[id^="project"]'),a=1;a<n.length;a++){var s=n[a].style.display;"none"!==s&&(n[a].style.display="none")}}}},f=g,b=(n("034f"),Object(h["a"])(f,s,i,!1,null,null,null)),k=b.exports;a["a"].config.productionTip=!1,new a["a"]({render:function(e){return e(k)}}).$mount("#app")},"85ec":function(e,t,n){},be2f:function(e,t,n){},d4bf:function(e){e.exports=JSON.parse('[{"id":0,"name":"Lego database","course":"TNMK30 Elektronisk Publicering","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan6412-2016-TNMK30.html?&k_budget_year=2016&k_kurskod=TNMK30","image":"https://cdn3.cdnme.se/2438591/9-3/lego_5f913710ddf2b37f2bb79f1c.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/lego_5f913710ddf2b37f2bb79f1c.png"],"description":"This is a web page for presenting a database of roughly all Lego sets ever created up until 2016. A Lego collector can browse specific lego sets or parts of lego sets by searching for their name or ID-number. More detailed information about all parts included in a set is also provided.","repo":"http://www.student.itn.liu.se/~maras099/LegoDatabasen/","report":"https://drive.google.com/file/d/12oFAH8keCXSTk2a8zhNn-F142b3RhMWk/view?usp=sharing","languages":{"PHP":"https://cdn1.cdnme.se/2438591/9-3/php_5f913e5c9606ee348f9a958a.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","HTML":"https://cdn1.cdnme.se/2438591/9-3/html_5f913eb99606ee34bb0c2fcd.png","CSS":"https://cdn3.cdnme.se/2438591/9-3/css_5f913dcb2a6b22bbc000869c.png","SQL":"https://cdn3.cdnme.se/2438591/9-3/sql_5f913dcfddf2b37f3cc64092.png"}},{"id":1,"name":"Tamagotchi Replica","course":"TNM040: Kommunikation och användargränssnitt","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan774a-2016-TNM040.html?&k_budget_year=2016&k_kurskod=TNM040","image":"https://cdn3.cdnme.se/2438591/9-3/game_5f92e868e087c31f82bb76ec.gif","more_images":"","description":"This is a replica of the 1990’s Tamagotchi.  The user interface was implemented in accordance with Norman’s design principles. Hilma was part of the team whose task was to produce all the pixel art for the game.  Several frames were made for normal, happy, sad and dying Tama, as well as for the apple and the poop.","repo":"https://github.com/oliviaenroth/TNM040","report":"https://drive.google.com/file/d/1-RmVt4YEy25rfo0F1d4LSqvwa8AtVEeO/view?usp=sharing","languages":{"Node.js":"https://cdn3.cdnme.se/2438591/9-3/node_5f8d89792a6b224bcb9d05ad.png","npm":"https://cdn3.cdnme.se/2438591/9-3/npm_5f8d897b2a6b224c0b3c95e5.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","React.js":"https://cdn1.cdnme.se/2438591/9-3/react_5f8d897fddf2b37e3edf9aa6.png"}},{"id":2,"name":"Slinky Simulation","course":"TNM085: Modelleringsprojekt","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan4c66-2016-TNM085.html?&k_budget_year=2016&k_kurskod=TNM085","image":"https://cdn2.cdnme.se/2438591/9-3/slinky_5f92e8922a6b2284f5842e0c.gif","more_images":["https://cdn3.cdnme.se/2438591/9-3/slinky_plot_5f9c38789606ee560cfe41af.png"],"description":"This is a modeling, simulation and animation of a falling slinky toy, using Euler\'s numerical step method. The model consisted of several masses connected by massless feathers and dampers. A free body diagram was used to obtain a force equation in the shape of three differential equations. MATLAB was used to perform a pilot study, to find a desired behaviour. A simplified animation of the falling slinky was implemented in JavaScript, using Three.js. The finished implementation is missing dampers, proper collision handling and a surrounding scene.","repo":"https://github.com/KevinEC/slinky","report":"https://drive.google.com/file/d/1cWCrjOifG4lDdkkSAgSrRgg0Vvz9ITrm/view?usp=sharing","languages":{"MATLAB":"https://cdn1.cdnme.se/2438591/9-3/matlab_5f8d89772a6b224c0b3c95e4.png","Node.js":"https://cdn3.cdnme.se/2438591/9-3/node_5f8d89792a6b224bcb9d05ad.png","npm":"https://cdn3.cdnme.se/2438591/9-3/npm_5f8d897b2a6b224c0b3c95e5.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","React.js":"https://cdn1.cdnme.se/2438591/9-3/react_5f8d897fddf2b37e3edf9aa6.png"}},{"id":3,"name":"A Tropical Deserted Island, a.k.a. Palme","course":"TNM061: 3D-grafik","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan5492-2016-TNM061.html?&k_budget_year=2016&k_kurskod=TNM061","image":"https://cdn1.cdnme.se/2438591/9-3/palmegif_5f92e8bae087c31fe36217e2.gif","more_images":["https://cdn2.cdnme.se/2438591/9-3/palme_5f8d897de087c324c0271f20.png","https://cdn3.cdnme.se/2438591/9-3/behindthescen_5fa271849606ee4b9594c54d.png","https://cdn2.cdnme.se/2438591/9-3/palme0_5f92e809ddf2b31941411366.png","https://cdn1.cdnme.se/2438591/9-3/palme1_5f92e80bddf2b3193daa447a.png","https://cdn2.cdnme.se/2438591/9-3/palme2_5f92e80e2a6b228500fa82ce.png"],"description":"This is a 3D-graphics low-poly scene created in Three.js. Hilma was responsible for and created the island and the palm tree, using Autodesk 3DS Max. The meshes and textures were included in the scene using file loaders for .obj and .mtl files.","repo":"https://github.com/KevinEC/theIsland","report":"https://drive.google.com/file/d/1FHetv5UgkhdNvNTAcTsV10uUi_sRQ-G0/view?usp=sharing","languages":{"Node.js":"https://cdn3.cdnme.se/2438591/9-3/node_5f8d89792a6b224bcb9d05ad.png","npm":"https://cdn3.cdnme.se/2438591/9-3/npm_5f8d897b2a6b224c0b3c95e5.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","Three.js":"https://cdn1.cdnme.se/2438591/9-3/three_5f8d89859606ee567fdedd7a.png","WebGL":"https://cdn2.cdnme.se/2438591/9-3/webgl_5f8d89862a6b224bde83c3f1.png","3DS Max":"https://cdn3.cdnme.se/2438591/9-3/3dsmax_5fa270d62a6b22706097f83b.png","GIMP":"https://cdn3.cdnme.se/2438591/9-3/gimp_5f8d89759606ee566a8a43f8.png"}},{"id":4,"name":"Cinder-ella","course":"TNM094 Medietekniskt Kandidatprojekt","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan6c2d-2016-TNM094.html?&k_budget_year=2016&k_kurskod=TNM094","image":"https://s8.gifyu.com/images/ezgif.com-gif-maker-1e97b6092471cc859.gif","more_images":["https://cdn1.cdnme.se/2438591/9-3/card_5f92e8f79606ee150ae5dd38.png","https://cdn3.cdnme.se/2438591/9-3/start_5f92e8fc9606ee150fe08e59.png","https://cdn1.cdnme.se/2438591/9-3/puck_storymode_5f92e8f9e087c31fdd817c8a.png","https://cdn1.cdnme.se/2438591/9-3/story_mode_5f92e8fee087c31fe6b7e3d5.png"],"description":"This is a bachelor thesis project, developed using Scrum. An intuitive, user friendly and tangible user interface was implemented in C++, with the libraries Cinder and BlucadetViews.  The application was implemented for a large touch table, placed in a public environment. The resulting application allows the user to navigate media, in the form of cards with images and text. The cards can be translated, scaled, rotated and clicked on, flipping the card around to show more information about the subject of the card. Story Mode is activated by placing a physical object on the touch table and contains stories about different subjects.","repo":"https://github.com/KevinEC/kandidatenHeader","report":"https://drive.google.com/file/d/1HO7xpTuBP00vZOCOr2zVRIB-0CPhxpC9/view?usp=sharing","languages":{"C++":"https://cdn3.cdnme.se/2438591/9-3/cpp_5f9296c29606ee14f28a4846.png","Cinder":"https://cdn2.cdnme.se/2438591/9-3/cinder_5f9296c02a6b2284ee349674.png","Bluecadet":"https://cdn3.cdnme.se/2438591/9-3/bluecated_5f9296be2a6b22852ec65c19.png","XML":"https://cdn2.cdnme.se/2438591/9-3/xml_5f9296c8e087c31f75227eb6.png","DreaMTouch":"https://cdn2.cdnme.se/2438591/9-3/dreamtouch_5f9296c4e087c31fe6b7d76d.png","TUIO":"https://cdn2.cdnme.se/2438591/9-3/tuio_5f9296c6e087c31f899329cc.png"}},{"id":5,"name":"Campaign for EWBS Pop-up event","course":"TNM069 Grafisk Design och Kommunikation ","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan9061-2016-TNM069.html?&k_budget_year=2016&k_kurskod=TNM069","image":"https://cdn2.cdnme.se/2438591/9-3/rotated_pattern_white_5f929a4a2a6b22852ec65cce.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/poster2_5f929a449606ee14fe5583ae.png","https://cdn1.cdnme.se/2438591/9-3/poster1_5f929a412a6b22849d4d1774.png","https://cdn3.cdnme.se/2438591/9-3/rotated_pattern_5f929a48ddf2b31919b025c5.png","https://cdn2.cdnme.se/2438591/9-3/rollups_5f929a469606ee153474bf47.png"],"description":"This is a campaign for a pop up event for Engineers Without Borders Sweden (EWBS). EWBS are looking to recruit engineering students to volunteer in their international projects. To do so, they are arranging pop-up events around technical university campuses in Sweden. The artefacts for the campaign are a mix of digital and printed work, with a traditional approach, that are easy to set up and move. The artefacts created were a Facebook event, posters, a table cube, roll ups, a booklet and a short film. Hilma produced the posters and the roll ups and also extended EWBSs graphical profile with a pattern.","repo":"","report":"https://drive.google.com/file/d/1QUNya8F_lcGQsXE3i-8PD42N65rcL42C/view?usp=sharing","languages":{"Adobe XD":"https://cdn1.cdnme.se/2438591/9-3/adobexd_5f929cc22a6b22852c9a0769.png","Adobe Illustrator":"https://cdn2.cdnme.se/2438591/9-3/illustrator_5f92d723ddf2b3191d580796.png"}},{"id":6,"name":"Monte-Carlo Ray tracer","course":"TNCG15 Advanced Global Illumination and Rendering","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplane137-2016-TNCG15.html?&k_budget_year=2016&k_kurskod=TNCG15","image":"https://cdn2.cdnme.se/2438591/9-3/raytracer_5f929f41e087c31fe6b7d8e8.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/d_shadowrays_5f929f3a9606ee151aff6395.png","https://cdn1.cdnme.se/2438591/9-3/e_newcolors_5f929f3c9606ee151aff6396.png","https://cdn2.cdnme.se/2438591/9-3/mclookingfab_5f929f3e9606ee151aff6397.png","https://cdn2.cdnme.se/2438591/9-3/raytracer_5f929f41e087c31fe6b7d8e8.png"],"description":"A basic ray tracer was implemented from scratch, using C++. Whitted ray tracing and Monte-Carlo estimations were used to derive an approximate solution to the standard rendering equation. The aim of the implementation was to produce a photorealistic image of a basic scene, consisting of a hexagonal room. The room had to contain at least one tetrahedron and two spheres. One of the spheres and the walls, roof and floor of the hexagonal room were diffuse surfaces, whilst the tetrahedron and one sphere were perfect reflectors. A quadratic area light was used as the single light source in the scene. With the enhancement methods of supersampling and ray randomisation, the final image took about 5 minutes to render, depending on the number of rays used for each pixel. ","repo":"https://github.com/hilmautanefternamn/TNCG15","report":"https://drive.google.com/file/d/16ZKvNEVBzv1IuE0ZENC248UQN3-eIKcx/view?usp=sharing","languages":{"C++":"https://cdn3.cdnme.se/2438591/9-3/cpp_5f9296c29606ee14f28a4846.png"}},{"id":7,"name":"Face Recognition","course":"TNM034 Advanced Image Processing","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan6b2a-2016-TNM034.html?&k_budget_year=2016&k_kurskod=TNM034","image":"https://cdn3.cdnme.se/2438591/9-3/fargskillnaderfigur_5f92a0929606ee15521998f8.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/eyes_found_5f92a090e087c31fbb4b0375.png","https://cdn1.cdnme.se/2438591/9-3/averageface_with_226_training_images_5fa27845e087c3701f6b33b7.png"],"description":"An algorithm for face recognition was implemented using MATLAB. Faces were taken from California Institute of Technology(CIT)’s database from 1999. Morphological operations, geometrical rules and analysis of colour and intensity differences were used to detect interesting areas, such as skin, eyes and mouth. Unidentified faces were compared to known faces by the distance between their respective weights to a number of eigenvectors. The eigenvectors and their weights were derived during a training phase, using Principal Component Analysis. All results had more than 50% accuracy. Normalisation and choice of threshold were the greatest cause of error.","repo":"https://github.com/ChristianAdamsson/FacialRecognition---TNM034","report":"https://drive.google.com/file/d/17_HJIJlhWP8yYhyWK2x6ieB8qR5yV2Xg/view?usp=sharing","languages":{"MATLAB":"https://cdn1.cdnme.se/2438591/9-3/matlab_5f8d89772a6b224c0b3c95e4.png"}},{"id":8,"name":"Safe Election","course":"TNM031 Network Programming and Security","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplanc462-2016-TNM031.html?&k_budget_year=2016&k_kurskod=TNM031","image":"https://cdn3.cdnme.se/2438591/9-3/safeelection_5f92a1f52a6b2284f5841f45.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/safeelection_5f92a1f52a6b2284f5841f45.png"],"description":"An application of a secure virtual election was implemented in Java, using secure SSL/TLS sockets. The set up of the application was based on the article “Secure Virtual Election Booth with Two Central Facilities” written by Janga Sireesha and So-In Chakchai at the Department of Computer Science Washington University in St. Louis, USA. Every voter had to ask the  Central Legitimization Agency (CLS) for a validation number to be able to submit their vote to the  Central Tabulating Facility (CTF). The voters also choose an identification number to be able to see that their vote was registered correctly by the CTF. ","repo":"http://www.student.itn.liu.se/~simka629/Election/","report":"","languages":{"Java":"https://cdn1.cdnme.se/2438591/9-3/java_5f92a24addf2b31952fd4e14.png"}},{"id":9,"name":"Twidder","course":"TDDD97 Webbprogrammering","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplancab9-2016-TDDD97.html?&k_budget_year=2016&k_kurskod=TDDD97","image":"https://cdn2.cdnme.se/2438591/9-3/twidder_5f92a7e4ddf2b3195ab771ef.png","more_images":["https://cdn3.cdnme.se/2438591/9-3/hem_5f92eac22a6b2284ee34a83a.png","https://cdn3.cdnme.se/2438591/9-3/live_data_5f92a7e2ddf2b319414109c7.png"],"description":"A very simple version of Twitter was implemented with a python server and MySQL database. A user can sign up, sign in, browse for other users and post on other user’s walls as well as on their own wall. One can also change one\'s password, as well as getting a new password by email. Three segments of live data was added to the page, telling how many users that are online, their gender and how many messages they have on their walls. A selenium script was also implemented for testing of the web application. ","repo":"https://github.com/hilmautanefternamn/twidder","report":"","languages":{"Python":"https://cdn3.cdnme.se/2438591/9-3/python_5f92a3f79606ee1531346834.png","Flask":"https://cdn2.cdnme.se/2438591/9-3/flask_5f92a3f52a6b2284b3db8649.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","HTML":"https://cdn1.cdnme.se/2438591/9-3/html_5f913eb99606ee34bb0c2fcd.png","CSS":"https://cdn3.cdnme.se/2438591/9-3/css_5f913dcb2a6b22bbc000869c.png","MySQL":"https://cdn3.cdnme.se/2438591/9-3/mysql_5f913dcde087c35dfa4c3246.png"}},{"id":10,"name":"Gritssa","course":"TDDD27 Avancerad Webbprogrammering","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan17e7-2016-TDDD27.html?&k_budget_year=2016&k_kurskod=TDDD27","image":"https://cdn1.cdnme.se/2438591/9-3/main_5f92a9aee087c31fad56f248.png","more_images":["https://cdn1.cdnme.se/2438591/9-3/gritssa_5f9c3d0fe087c309cdb64663.gif","https://cdn2.cdnme.se/2438591/9-3/meh_5f92a9b02a6b2284fdf984ed.png"],"description":"This is a web based multiplayer pictionary game, where each player must create an account with a username and a password. The first player to join a game will be the first to get a word to draw and the rest will be guessers. Each player will have their turn to draw. The guessers see the drawing in real time and submit guesses.  The guesses, all online players and their score can be seen by all players in the game. The first one to have the right guess gets a point. Players are free to join and leave at any time, the game has no end. Words to draw are randomly picked from a Cloud firestore database and the online status of all the users is stored in a Realtime Database. The web page is hosted by Firebase at the following url: https://gritssa-80a2c.web.app/.","repo":"https://gitlab.liu.se/hilbe199/tddd27_2020/-/tree/master/","report":"","languages":{"Node.js":"https://cdn3.cdnme.se/2438591/9-3/node_5f8d89792a6b224bcb9d05ad.png","npm":"https://cdn3.cdnme.se/2438591/9-3/npm_5f8d897b2a6b224c0b3c95e5.png","JavaScript":"https://cdn3.cdnme.se/2438591/9-3/javascript_5f8da6afe087c324dddb3d12.png","Vue.js":"https://cdn1.cdnme.se/2438591/9-3/logo_5f92a50a2a6b2284e4ae4449.png","Firebase":"https://cdn2.cdnme.se/2438591/9-3/firebase_5f92a4fd2a6b2284c0ebdafa.png"}},{"id":11,"name":"Pacman AI","course":"TNM095 Artificiell Intelligens for interactive media","courseLink":"https://kdb.it.liu.se/KDB/kdb-5.liu.se/liu/lith/studiehandboken/svkursplan1be6-2016-TNM095.html?&k_budget_year=2016&k_kurskod=TNM095","image":"https://cdn1.cdnme.se/2438591/9-3/pacman_5f9c26d39606ee55e6e286c6.gif","more_images":["https://cdn3.cdnme.se/2438591/9-3/pacmaan_5fa287739606ee4b5bc7d540.png"],"description":"An AI-agent was  implemented to play an already implemented version of the 2D game Pacman. The learning method used was feature based Q-learning, which is a type of reinforcement learning, and the agent was developed in python. For every action performed, by updating the values of the Q-table and introducing rewards and an exploration rate, the agent was taught to win the original level of the game. Several short and long term training sessions were performed, resulting in agents with varying behaviours and with various success rates.","repo":"https://github.com/hilmautanefternamn/TNM095---project","report":"https://drive.google.com/file/d/1WTA38I5m7jKHAvw_NhSU_8KWqKcomXsJ/view?usp=sharing","languages":{"Python":"https://cdn3.cdnme.se/2438591/9-3/python_5f92a3f79606ee1531346834.png","PyGame":"https://cdn3.cdnme.se/2438591/9-3/pygame_5f92ab10e087c31fcd858664.png","NumPy":"https://cdn2.cdnme.se/2438591/9-3/numpy_5f92ab0d2a6b2284b3db87df.png"}}]')}});
//# sourceMappingURL=app.7a2f49fa.js.map